<div id="player"></div>

<div class="title-bug">
    <h1 id="titre"> Motion <br />&#8239; Design </h1>
</div>
<div class="bug-text">
    <div class="debug-align"><span> En ce <span class="bug-heure">moment</span> </span> </div>
</div>

<script>

    var videos = [];
    var i = 0;
    $.ajax({
        url: '{{ path('mmitv_ifaceTV_video') }}',
        dataType: 'json',
        async : false,
        success: function(video){
            videos.push(video)
        }
    });

    console.log(videos);


    var player;

    //Charge Iframe Player API youtube
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    //créer l'iframe après que le code api soit dl
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '1080',
            width: '1920',
            videoId: videos[0][i]['idlink'],
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        });
    }

    //API appelle cette function quand video player = ready
    function onPlayerReady(event) {
        event.target.playVideo();
        $(".title-bug").delay(4000).animate({right:"-695px"},1800)
                .delay(5000).animate({right:"295px"},1800)
                .delay(5000).animate({right:"-695px"},1800);

        $(".bug-text").delay(4000).animate({right:"-1077px"}, 1800)
                .delay(6000).animate({right:"-27px"}, 1500)
                .delay(4000).animate({right:"-1077px"}, 1500);
    }

    function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.ENDED) {
            stopVideo();
            i++;
            if(i == videos[0].length){
                i = 0;
            }
        }
    }

    function stopVideo() {
        player.stopVideo();
        player.loadVideoById(videos[0][i]['idlink']);
    }



</script>