{% extends "mmitvBackBundle::layouttv.html.twig" %}
{% block body %}
{{ parent() }}
                          <!-- Ecran vidéo -->
		<div id="player"></div>

                          <!-- Bug -->
        {{ render(controller('mmitvBackBundle:TV:bug')) }}

                        <!-- Annonce -->

      {{ render(controller('mmitvBackBundle:TV:info')) }}


                          <!-- Emploi du temps -->
        {{ render(controller('mmitvBackBundle:TV:edt')) }}

</div>


<script type="text/javascript">

    //Charge Iframe Player API youtube
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api";
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    //créer l'iframe après que le code api soit dl
    var player;
    function onYouTubeIframeAPIReady(){
        player = new YT.Player('player', {
            height: '1080',
            width: '1920',
            videoId: 'ql8K3KJyWgY',
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        });
    }

    //API appelle cette function quand video player = ready

    function onPlayerReady(event){
        event.target.playVideo();
    }

    // quand state=1(quand video en lecture), 6sec de video puis stop
    var done = false;
    function onPlayerStateChange(event){
        if(event.data == YT.PlayerState.PLAYING && !done){
            setTimeout(stopVideo, 6000);
            done = true;
        }
    }
    function stopVideo(){
        player.stopVideo();
    }

</script>


{% endblock %}